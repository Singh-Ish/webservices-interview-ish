{"ast":null,"code":"var _jsxFileName = \"/Users/ish/Google Drive/Ish Projects /its/web-services-frontend-dev-test/app/src/components/SearchResult/SearchResults.js\";\nimport React, { useEffect } from 'react';\nimport SearchResultItem from './SearchResultItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SearchResult(props) {\n  const {\n    data,\n    searchText,\n    setTagList,\n    tagList\n  } = props;\n  const selectedTag = 'love';\n  data[0].itemTags = 'love';\n  console.log(data); // filtering the content based on the search textto be displayed ; this filters by name and fullname\n  // const filterData = data.filter((item) => {\n  //   if (searchText == '') {\n  //     if (item.itemTags.includes(selectedTag.toLowerCase())) {\n  //       return item\n  //     } else {\n  //       return item\n  //     }\n  //   } else if (\n  //     item.name.toLowerCase().includes(searchText.toLowerCase()) ||\n  //     item.biography.fullName.toLowerCase().includes(searchText.toLowerCase())\n  //   ) {\n  //     return item\n  //   }\n  // })\n  // console.log(data[0].itemTags.length)\n  // var filterData = data.filter((item) => {\n  //   if (item.itemTags.length === 0) {\n  //     return item\n  //   }\n  // })\n  // console.log(filterData)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.filter(item => {\n      if (searchText == '') {\n        if (item.itemTags.includes(selectedTag.toLowerCase())) {\n          return item;\n        } else {\n          return item;\n        }\n      } else if (item.name.toLowerCase().includes(searchText.toLowerCase()) || item.biography.fullName.toLowerCase().includes(searchText.toLowerCase())) {\n        return item;\n      }\n    }).filter(item => {\n      item.itemTags.includes('love');\n    }).map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SearchResultItem, {\n        item: item,\n        setTagList: setTagList,\n        tagList: tagList,\n        data: data,\n        index: index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }, this))\n  }, void 0, false);\n}\n\n_c = SearchResult;\nexport default SearchResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"sources":["/Users/ish/Google Drive/Ish Projects /its/web-services-frontend-dev-test/app/src/components/SearchResult/SearchResults.js"],"names":["React","useEffect","SearchResultItem","SearchResult","props","data","searchText","setTagList","tagList","selectedTag","itemTags","console","log","filter","item","includes","toLowerCase","name","biography","fullName","map","index","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,UAAR;AAAoBC,IAAAA,UAApB;AAAgCC,IAAAA;AAAhC,MAA4CJ,KAAlD;AAEA,QAAMK,WAAW,GAAG,MAApB;AAEAJ,EAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQK,QAAR,GAAmB,MAAnB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ,EAP2B,CAS3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEA,sBACE;AAAA,cAYGA,IAAI,CACFQ,MADF,CACUC,IAAD,IAAU;AAChB,UAAIR,UAAU,IAAI,EAAlB,EAAsB;AACpB,YAAIQ,IAAI,CAACJ,QAAL,CAAcK,QAAd,CAAuBN,WAAW,CAACO,WAAZ,EAAvB,CAAJ,EAAuD;AACrD,iBAAOF,IAAP;AACD,SAFD,MAEO;AACL,iBAAOA,IAAP;AACD;AACF,OAND,MAMO,IACLA,IAAI,CAACG,IAAL,CAAUD,WAAV,GAAwBD,QAAxB,CAAiCT,UAAU,CAACU,WAAX,EAAjC,KACAF,IAAI,CAACI,SAAL,CAAeC,QAAf,CACGH,WADH,GAEGD,QAFH,CAEYT,UAAU,CAACU,WAAX,EAFZ,CAFK,EAKL;AACA,eAAOF,IAAP;AACD;AACF,KAhBF,EAiBED,MAjBF,CAiBUC,IAAD,IAAU;AAChBA,MAAAA,IAAI,CAACJ,QAAL,CAAcK,QAAd,CAAuB,MAAvB;AACD,KAnBF,EAoBEK,GApBF,CAoBM,CAACN,IAAD,EAAOO,KAAP,kBACH;AAAA,6BACE,QAAC,gBAAD;AACE,QAAA,IAAI,EAAEP,IADR;AAEE,QAAA,UAAU,EAAEP,UAFd;AAGE,QAAA,OAAO,EAAEC,OAHX;AAIE,QAAA,IAAI,EAAEH,IAJR;AAKE,QAAA,KAAK,EAAEgB;AALT;AAAA;AAAA;AAAA;AAAA;AADF,OAAUP,IAAI,CAACQ,EAAf;AAAA;AAAA;AAAA;AAAA,YArBH;AAZH,mBADF;AA8CD;;KAjFQnB,Y;AAmFT,eAAeA,YAAf","sourcesContent":["import React, { useEffect } from 'react'\n\nimport SearchResultItem from './SearchResultItem'\n\nfunction SearchResult(props) {\n  const { data, searchText, setTagList, tagList } = props\n\n  const selectedTag = 'love'\n\n  data[0].itemTags = 'love'\n\n  console.log(data)\n\n  // filtering the content based on the search textto be displayed ; this filters by name and fullname\n\n  // const filterData = data.filter((item) => {\n  //   if (searchText == '') {\n  //     if (item.itemTags.includes(selectedTag.toLowerCase())) {\n  //       return item\n  //     } else {\n  //       return item\n  //     }\n  //   } else if (\n  //     item.name.toLowerCase().includes(searchText.toLowerCase()) ||\n  //     item.biography.fullName.toLowerCase().includes(searchText.toLowerCase())\n  //   ) {\n  //     return item\n  //   }\n  // })\n  // console.log(data[0].itemTags.length)\n\n  // var filterData = data.filter((item) => {\n  //   if (item.itemTags.length === 0) {\n  //     return item\n  //   }\n  // })\n\n  // console.log(filterData)\n\n  return (\n    <>\n      {/* {filterData.map((item, index) => (\n        <div key={item.id}>\n          <SearchResultItem\n            item={item}\n            setTagList={setTagList}\n            tagList={tagList}\n            data={data}\n            index={index}\n          />\n        </div>\n      ))} */}\n      {data\n        .filter((item) => {\n          if (searchText == '') {\n            if (item.itemTags.includes(selectedTag.toLowerCase())) {\n              return item\n            } else {\n              return item\n            }\n          } else if (\n            item.name.toLowerCase().includes(searchText.toLowerCase()) ||\n            item.biography.fullName\n              .toLowerCase()\n              .includes(searchText.toLowerCase())\n          ) {\n            return item\n          }\n        })\n        .filter((item) => {\n          item.itemTags.includes('love')\n        })\n        .map((item, index) => (\n          <div key={item.id}>\n            <SearchResultItem\n              item={item}\n              setTagList={setTagList}\n              tagList={tagList}\n              data={data}\n              index={index}\n            />\n          </div>\n        ))}\n    </>\n  )\n}\n\nexport default SearchResult\n"]},"metadata":{},"sourceType":"module"}