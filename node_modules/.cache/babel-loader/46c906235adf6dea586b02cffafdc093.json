{"ast":null,"code":"var _jsxFileName = \"/Users/ish/Google Drive/Ish Projects /its/web-services-frontend-dev-test/app/src/components/SearchResult/SearchResults.js\";\nimport React, { useEffect } from 'react';\nimport SearchResultItem from './SearchResultItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SearchResult(props) {\n  const {\n    data,\n    searchText,\n    setTagList,\n    tagList\n  } = props; // filtering the content based on the search textto be displayed ; this filters by name and fullname\n\n  var filterData = data.filter(item => {\n    if (searchText === '') {\n      return item;\n    } else if (item.name.toLowerCase().includes(searchText.toLowerCase()) || item.biography.fullName.toLowerCase().includes(searchText.toLowerCase())) {\n      return item;\n    }\n  });\n\n  if (selectedTag === '') {\n    filterData = data.filter(item => {\n      if (searchText === '') {\n        return item;\n      } else if (item.name.toLowerCase().includes(searchText.toLowerCase()) || item.biography.fullName.toLowerCase().includes(searchText.toLowerCase())) {\n        return item;\n      }\n    });\n  } else {\n    filterData = data.filter(item => {\n      if (item.itemTags.includes(selectedTag.toLowerCase())) {\n        return item;\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: filterData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SearchResultItem, {\n        item: item,\n        setTagList: setTagList,\n        tagList: tagList,\n        data: data,\n        index: index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n\n_c = SearchResult;\nexport default SearchResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"sources":["/Users/ish/Google Drive/Ish Projects /its/web-services-frontend-dev-test/app/src/components/SearchResult/SearchResults.js"],"names":["React","useEffect","SearchResultItem","SearchResult","props","data","searchText","setTagList","tagList","filterData","filter","item","name","toLowerCase","includes","biography","fullName","selectedTag","itemTags","map","index","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,UAAR;AAAoBC,IAAAA,UAApB;AAAgCC,IAAAA;AAAhC,MAA4CJ,KAAlD,CAD2B,CAG3B;;AACA,MAAIK,UAAU,GAAGJ,IAAI,CAACK,MAAL,CAAaC,IAAD,IAAU;AACrC,QAAIL,UAAU,KAAK,EAAnB,EAAuB;AACrB,aAAOK,IAAP;AACD,KAFD,MAEO,IACLA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCR,UAAU,CAACO,WAAX,EAAjC,KACAF,IAAI,CAACI,SAAL,CAAeC,QAAf,CAAwBH,WAAxB,GAAsCC,QAAtC,CAA+CR,UAAU,CAACO,WAAX,EAA/C,CAFK,EAGL;AACA,aAAOF,IAAP;AACD;AACF,GATgB,CAAjB;;AAWA,MAAIM,WAAW,KAAK,EAApB,EAAwB;AACtBR,IAAAA,UAAU,GAAGJ,IAAI,CAACK,MAAL,CAAaC,IAAD,IAAU;AACjC,UAAIL,UAAU,KAAK,EAAnB,EAAuB;AACrB,eAAOK,IAAP;AACD,OAFD,MAEO,IACLA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCR,UAAU,CAACO,WAAX,EAAjC,KACAF,IAAI,CAACI,SAAL,CAAeC,QAAf,CAAwBH,WAAxB,GAAsCC,QAAtC,CAA+CR,UAAU,CAACO,WAAX,EAA/C,CAFK,EAGL;AACA,eAAOF,IAAP;AACD;AACF,KATY,CAAb;AAUD,GAXD,MAWO;AACLF,IAAAA,UAAU,GAAGJ,IAAI,CAACK,MAAL,CAAaC,IAAD,IAAU;AACjC,UAAIA,IAAI,CAACO,QAAL,CAAcJ,QAAd,CAAuBG,WAAW,CAACJ,WAAZ,EAAvB,CAAJ,EAAuD;AACrD,eAAOF,IAAP;AACD;AACF,KAJY,CAAb;AAKD;;AAED,sBACE;AAAA,cACGF,UAAU,CAACU,GAAX,CAAe,CAACR,IAAD,EAAOS,KAAP,kBACd;AAAA,6BACE,QAAC,gBAAD;AACE,QAAA,IAAI,EAAET,IADR;AAEE,QAAA,UAAU,EAAEJ,UAFd;AAGE,QAAA,OAAO,EAAEC,OAHX;AAIE,QAAA,IAAI,EAAEH,IAJR;AAKE,QAAA,KAAK,EAAEe;AALT;AAAA;AAAA;AAAA;AAAA;AADF,OAAUT,IAAI,CAACU,EAAf;AAAA;AAAA;AAAA;AAAA,YADD;AADH,mBADF;AAeD;;KAjDQlB,Y;AAmDT,eAAeA,YAAf","sourcesContent":["import React, { useEffect } from 'react'\n\nimport SearchResultItem from './SearchResultItem'\n\nfunction SearchResult(props) {\n  const { data, searchText, setTagList, tagList } = props\n\n  // filtering the content based on the search textto be displayed ; this filters by name and fullname\n  var filterData = data.filter((item) => {\n    if (searchText === '') {\n      return item\n    } else if (\n      item.name.toLowerCase().includes(searchText.toLowerCase()) ||\n      item.biography.fullName.toLowerCase().includes(searchText.toLowerCase())\n    ) {\n      return item\n    }\n  })\n\n  if (selectedTag === '') {\n    filterData = data.filter((item) => {\n      if (searchText === '') {\n        return item\n      } else if (\n        item.name.toLowerCase().includes(searchText.toLowerCase()) ||\n        item.biography.fullName.toLowerCase().includes(searchText.toLowerCase())\n      ) {\n        return item\n      }\n    })\n  } else {\n    filterData = data.filter((item) => {\n      if (item.itemTags.includes(selectedTag.toLowerCase())) {\n        return item\n      }\n    })\n  }\n\n  return (\n    <>\n      {filterData.map((item, index) => (\n        <div key={item.id}>\n          <SearchResultItem\n            item={item}\n            setTagList={setTagList}\n            tagList={tagList}\n            data={data}\n            index={index}\n          />\n        </div>\n      ))}\n    </>\n  )\n}\n\nexport default SearchResult\n"]},"metadata":{},"sourceType":"module"}