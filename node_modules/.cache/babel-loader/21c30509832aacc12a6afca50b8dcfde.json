{"ast":null,"code":"var _jsxFileName = \"/Users/ish/Google Drive/Ish Projects /its/web-services-frontend-dev-test/app/src/components/SearchResult/SearchResults.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport SearchResultItem from './SearchResultItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SearchResult(props) {\n  _s();\n\n  const {\n    data,\n    searchText,\n    setTagList,\n    tagList\n  } = props;\n  const selectedTag = 'love';\n  useEffect(() => {\n    data[0] = { ...data[0],\n      itemTags: 'love'\n    };\n  }); // filtering the content based on the search textto be displayed ; this filters by name and fullname\n\n  const filterData = data.filter(item => {\n    if (searchText == '') {\n      return item;\n    } else if (selectedTag) {\n      if (item.itemTags.includes(selectedTag.toLowerCase())) {\n        return item;\n      }\n    } else if (item.name.toLowerCase().includes(searchText.toLowerCase()) || item.biography.fullName.toLowerCase().includes(searchText.toLowerCase())) {\n      return item;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data.filter(superhero => superhero.itemTags.includes(selectedTag)).map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SearchResultItem, {\n        item: item,\n        setTagList: setTagList,\n        tagList: tagList,\n        data: data,\n        index: index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this))\n  }, void 0, false);\n}\n\n_s(SearchResult, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = SearchResult;\nexport default SearchResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"sources":["/Users/ish/Google Drive/Ish Projects /its/web-services-frontend-dev-test/app/src/components/SearchResult/SearchResults.js"],"names":["React","useEffect","SearchResultItem","SearchResult","props","data","searchText","setTagList","tagList","selectedTag","itemTags","filterData","filter","item","includes","toLowerCase","name","biography","fullName","superhero","map","index","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,UAAR;AAAoBC,IAAAA,UAApB;AAAgCC,IAAAA;AAAhC,MAA4CJ,KAAlD;AAEA,QAAMK,WAAW,GAAG,MAApB;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,EAAE,GAAGA,IAAI,CAAC,CAAD,CAAT;AAAcK,MAAAA,QAAQ,EAAE;AAAxB,KAAV;AACD,GAFQ,CAAT,CAL2B,CAS3B;;AACA,QAAMC,UAAU,GAAGN,IAAI,CAACO,MAAL,CAAaC,IAAD,IAAU;AACvC,QAAIP,UAAU,IAAI,EAAlB,EAAsB;AACpB,aAAOO,IAAP;AACD,KAFD,MAEO,IAAIJ,WAAJ,EAAiB;AACtB,UAAII,IAAI,CAACH,QAAL,CAAcI,QAAd,CAAuBL,WAAW,CAACM,WAAZ,EAAvB,CAAJ,EAAuD;AACrD,eAAOF,IAAP;AACD;AACF,KAJM,MAIA,IACLA,IAAI,CAACG,IAAL,CAAUD,WAAV,GAAwBD,QAAxB,CAAiCR,UAAU,CAACS,WAAX,EAAjC,KACAF,IAAI,CAACI,SAAL,CAAeC,QAAf,CAAwBH,WAAxB,GAAsCD,QAAtC,CAA+CR,UAAU,CAACS,WAAX,EAA/C,CAFK,EAGL;AACA,aAAOF,IAAP;AACD;AACF,GAbkB,CAAnB;AAeA,sBACE;AAAA,cACGR,IAAI,CACFO,MADF,CACUO,SAAD,IAAeA,SAAS,CAACT,QAAV,CAAmBI,QAAnB,CAA4BL,WAA5B,CADxB,EAEEW,GAFF,CAEM,CAACP,IAAD,EAAOQ,KAAP,kBACH;AAAA,6BACE,QAAC,gBAAD;AACE,QAAA,IAAI,EAAER,IADR;AAEE,QAAA,UAAU,EAAEN,UAFd;AAGE,QAAA,OAAO,EAAEC,OAHX;AAIE,QAAA,IAAI,EAAEH,IAJR;AAKE,QAAA,KAAK,EAAEgB;AALT;AAAA;AAAA;AAAA;AAAA;AADF,OAAUR,IAAI,CAACS,EAAf;AAAA;AAAA;AAAA;AAAA,YAHH;AADH,mBADF;AAiBD;;GA1CQnB,Y;;KAAAA,Y;AA4CT,eAAeA,YAAf","sourcesContent":["import React, { useEffect } from 'react'\n\nimport SearchResultItem from './SearchResultItem'\n\nfunction SearchResult(props) {\n  const { data, searchText, setTagList, tagList } = props\n\n  const selectedTag = 'love'\n\n  useEffect(() => {\n    data[0] = { ...data[0], itemTags: 'love' }\n  })\n\n  // filtering the content based on the search textto be displayed ; this filters by name and fullname\n  const filterData = data.filter((item) => {\n    if (searchText == '') {\n      return item\n    } else if (selectedTag) {\n      if (item.itemTags.includes(selectedTag.toLowerCase())) {\n        return item\n      }\n    } else if (\n      item.name.toLowerCase().includes(searchText.toLowerCase()) ||\n      item.biography.fullName.toLowerCase().includes(searchText.toLowerCase())\n    ) {\n      return item\n    }\n  })\n\n  return (\n    <>\n      {data\n        .filter((superhero) => superhero.itemTags.includes(selectedTag))\n        .map((item, index) => (\n          <div key={item.id}>\n            <SearchResultItem\n              item={item}\n              setTagList={setTagList}\n              tagList={tagList}\n              data={data}\n              index={index}\n            />\n          </div>\n        ))}\n    </>\n  )\n}\n\nexport default SearchResult\n"]},"metadata":{},"sourceType":"module"}