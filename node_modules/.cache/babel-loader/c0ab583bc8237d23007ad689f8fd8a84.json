{"ast":null,"code":"var _jsxFileName = \"/Users/ish/Google Drive/Ish Projects /its/web-services-frontend-dev-test/app/src/components/SearchResults.js\";\nimport React from 'react';\nimport SearchResultItem from './SearchResultItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SearchResult(props) {\n  const {\n    data,\n    searchText,\n    setTagList,\n    tagsList\n  } = props;\n  const filterData = data.filter(item => {\n    if (searchText == '') {\n      return item;\n    } else if (item.name.toLowerCase().includes(searchText.toLowerCase()) || item.biography.fullName.toLowerCase().includes(searchText.toLowerCase())) {\n      return item;\n    }\n  });\n  return (\n    /*#__PURE__*/\n    // <> need to add unique key\n    _jsxDEV(_Fragment, {\n      children: filterData.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        index: item.id,\n        children: /*#__PURE__*/_jsxDEV(SearchResultItem, {\n          item: item,\n          setTagList: setTagList,\n          tagsList: tagsList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this))\n    }, void 0, false)\n  );\n}\n\n_c = SearchResult;\nexport default SearchResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"sources":["/Users/ish/Google Drive/Ish Projects /its/web-services-frontend-dev-test/app/src/components/SearchResults.js"],"names":["React","SearchResultItem","SearchResult","props","data","searchText","setTagList","tagsList","filterData","filter","item","name","toLowerCase","includes","biography","fullName","map","index","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,UAAR;AAAoBC,IAAAA,UAApB;AAAgCC,IAAAA;AAAhC,MAA6CJ,KAAnD;AAEA,QAAMK,UAAU,GAAGJ,IAAI,CAACK,MAAL,CAAaC,IAAD,IAAU;AACvC,QAAIL,UAAU,IAAI,EAAlB,EAAsB;AACpB,aAAOK,IAAP;AACD,KAFD,MAEO,IACLA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCR,UAAU,CAACO,WAAX,EAAjC,KACAF,IAAI,CAACI,SAAL,CAAeC,QAAf,CAAwBH,WAAxB,GAAsCC,QAAtC,CAA+CR,UAAU,CAACO,WAAX,EAA/C,CAFK,EAGL;AACA,aAAOF,IAAP;AACD;AACF,GATkB,CAAnB;AAWA;AAAA;AACE;AACA;AAAA,gBACGF,UAAU,CAACQ,GAAX,CAAe,CAACN,IAAD,EAAOO,KAAP,kBACd;AAAK,QAAA,KAAK,EAAEP,IAAI,CAACQ,EAAjB;AAAA,+BACE,QAAC,gBAAD;AACE,UAAA,IAAI,EAAER,IADR;AAEE,UAAA,UAAU,EAAEJ,UAFd;AAGE,UAAA,QAAQ,EAAEC;AAHZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAFF;AAcD;;KA5BQL,Y;AA8BT,eAAeA,YAAf","sourcesContent":["import React from 'react'\n\nimport SearchResultItem from './SearchResultItem'\n\nfunction SearchResult(props) {\n  const { data, searchText, setTagList, tagsList } = props\n\n  const filterData = data.filter((item) => {\n    if (searchText == '') {\n      return item\n    } else if (\n      item.name.toLowerCase().includes(searchText.toLowerCase()) ||\n      item.biography.fullName.toLowerCase().includes(searchText.toLowerCase())\n    ) {\n      return item\n    }\n  })\n\n  return (\n    // <> need to add unique key\n    <>\n      {filterData.map((item, index) => (\n        <div index={item.id}>\n          <SearchResultItem\n            item={item}\n            setTagList={setTagList}\n            tagsList={tagsList}\n          />\n        </div>\n      ))}\n    </>\n  )\n}\n\nexport default SearchResult\n"]},"metadata":{},"sourceType":"module"}