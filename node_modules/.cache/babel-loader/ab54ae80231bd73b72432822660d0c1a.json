{"ast":null,"code":"var _jsxFileName = \"/Users/ish/Google Drive/Ish Projects /its/web-services-frontend-dev-test/app/src/components/SearchResults.js\";\nimport React from 'react';\nimport SearchResultItem from './SearchResultItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SearchResult(props) {\n  const {\n    data,\n    searchText\n  } = props;\n  const filterData = data.filter(item => {\n    if (searchText == '') {\n      return item;\n    } else if (item.name.toLowerCase().includes(searchText.toLowerCase())) {\n      return item;\n    }\n  });\n  return (\n    /*#__PURE__*/\n    // <> need to add unique key\n    _jsxDEV(_Fragment, {\n      children: filterData.map(item => /*#__PURE__*/_jsxDEV(SearchResultItem, {\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this))\n    }, void 0, false)\n  );\n}\n\n_c = SearchResult;\nexport default SearchResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"sources":["/Users/ish/Google Drive/Ish Projects /its/web-services-frontend-dev-test/app/src/components/SearchResults.js"],"names":["React","SearchResultItem","SearchResult","props","data","searchText","filterData","filter","item","name","toLowerCase","includes","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAuBF,KAA7B;AAEA,QAAMG,UAAU,GAAGF,IAAI,CAACG,MAAL,CAAaC,IAAD,IAAU;AACvC,QAAIH,UAAU,IAAI,EAAlB,EAAsB;AACpB,aAAOG,IAAP;AACD,KAFD,MAEO,IAAIA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCN,UAAU,CAACK,WAAX,EAAjC,CAAJ,EAAgE;AACrE,aAAOF,IAAP;AACD;AACF,GANkB,CAAnB;AAQA;AAAA;AACE;AACA;AAAA,gBAaGF,UAAU,CAACM,GAAX,CAAgBJ,IAAD,iBACd,QAAC,gBAAD;AAAkB,QAAA,IAAI,EAAEA;AAAxB;AAAA;AAAA;AAAA;AAAA,cADD;AAbH;AAFF;AAoBD;;KA/BQN,Y;AAiCT,eAAeA,YAAf","sourcesContent":["import React from 'react'\n\nimport SearchResultItem from './SearchResultItem'\n\nfunction SearchResult(props) {\n  const { data, searchText } = props\n\n  const filterData = data.filter((item) => {\n    if (searchText == '') {\n      return item\n    } else if (item.name.toLowerCase().includes(searchText.toLowerCase())) {\n      return item\n    }\n  })\n\n  return (\n    // <> need to add unique key\n    <>\n      {/* {data\n        .filter((val) => {\n          if (searchText == '') {\n            return val\n          } else if (val.name.toLowerCase().include(searchText.toLowerCase())) {\n            return val\n          }\n        })\n        .map((item) => (\n          <SearchResultItem item={item} />\n        ))} */}\n\n      {filterData.map((item) => (\n        <SearchResultItem item={item} />\n      ))}\n    </>\n  )\n}\n\nexport default SearchResult\n"]},"metadata":{},"sourceType":"module"}