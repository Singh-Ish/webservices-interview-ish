{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport SearchResultItem from './SearchResultItem';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SearchResult(props) {\n  _s();\n\n  const {\n    data,\n    searchText,\n    setTagList,\n    tagList\n  } = props;\n  const selectedTag = 'love';\n  useEffect(() => {\n    data[0] = { ...data[0],\n      itemTags: 'love'\n    };\n    console.log(data);\n  });\n  var filterData; // filtering the content based on the search textto be displayed ; this filters by name and fullname\n\n  var filterData = data.filter(item => {\n    if (searchText == '') {\n      // if (data.itemTags.filter(data.itemTags == selectedTag)) {\n      //   return item\n      // } else {\n      return item; // }\n    } else if (item.name.toLowerCase().includes(searchText.toLowerCase()) || item.biography.fullName.toLowerCase().includes(searchText.toLowerCase())) {\n      return item;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(SearchResult, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = SearchResult;\nexport default SearchResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"sources":["/Users/ish/Google Drive/Ish Projects /its/web-services-frontend-dev-test/app/src/components/SearchResult/SearchResults.js"],"names":["React","useEffect","SearchResultItem","SearchResult","props","data","searchText","setTagList","tagList","selectedTag","itemTags","console","log","filterData","filter","item","name","toLowerCase","includes","biography","fullName"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,UAAR;AAAoBC,IAAAA,UAApB;AAAgCC,IAAAA;AAAhC,MAA4CJ,KAAlD;AAEA,QAAMK,WAAW,GAAG,MAApB;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,EAAE,GAAGA,IAAI,CAAC,CAAD,CAAT;AAAcK,MAAAA,QAAQ,EAAE;AAAxB,KAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACD,GAHQ,CAAT;AAKA,MAAIQ,UAAJ,CAV2B,CAW3B;;AACA,MAAIA,UAAU,GAAGR,IAAI,CAACS,MAAL,CAAaC,IAAD,IAAU;AACrC,QAAIT,UAAU,IAAI,EAAlB,EAAsB;AACpB;AACA;AACA;AACA,aAAOS,IAAP,CAJoB,CAKpB;AACD,KAND,MAMO,IACLA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,QAAxB,CAAiCZ,UAAU,CAACW,WAAX,EAAjC,KACAF,IAAI,CAACI,SAAL,CAAeC,QAAf,CAAwBH,WAAxB,GAAsCC,QAAtC,CAA+CZ,UAAU,CAACW,WAAX,EAA/C,CAFK,EAGL;AACA,aAAOF,IAAP;AACD;AACF,GAbgB,CAAjB;AAeA,sBACE,qCADF;AAeD;;GA1CQZ,Y;;KAAAA,Y;AA4CT,eAAeA,YAAf","sourcesContent":["import React, { useEffect } from 'react'\n\nimport SearchResultItem from './SearchResultItem'\n\nfunction SearchResult(props) {\n  const { data, searchText, setTagList, tagList } = props\n\n  const selectedTag = 'love'\n\n  useEffect(() => {\n    data[0] = { ...data[0], itemTags: 'love' }\n    console.log(data)\n  })\n\n  var filterData\n  // filtering the content based on the search textto be displayed ; this filters by name and fullname\n  var filterData = data.filter((item) => {\n    if (searchText == '') {\n      // if (data.itemTags.filter(data.itemTags == selectedTag)) {\n      //   return item\n      // } else {\n      return item\n      // }\n    } else if (\n      item.name.toLowerCase().includes(searchText.toLowerCase()) ||\n      item.biography.fullName.toLowerCase().includes(searchText.toLowerCase())\n    ) {\n      return item\n    }\n  })\n\n  return (\n    <>\n      {/* {filterData.map((item, index) => (\n        <div key={item.id}>\n          <SearchResultItem\n            item={item}\n            setTagList={setTagList}\n            tagList={tagList}\n            data={data}\n            index={index}\n          />\n        </div>\n      ))} */}\n    </>\n  )\n}\n\nexport default SearchResult\n"]},"metadata":{},"sourceType":"module"}