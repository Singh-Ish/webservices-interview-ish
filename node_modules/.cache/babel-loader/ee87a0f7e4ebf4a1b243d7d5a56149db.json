{"ast":null,"code":"var _jsxFileName = \"/Users/ish/Google Drive/Ish Projects /its/web-services-frontend-dev-test/app/src/components/SearchResult/SearchResults.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport SearchResultItem from './SearchResultItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SearchResult(props) {\n  _s();\n\n  const {\n    data,\n    searchText,\n    setTagList,\n    tagList\n  } = props;\n  const selectedTag = 'love';\n  useEffect(() => {\n    data[0] = { ...data[0],\n      itemTags: 'love'\n    };\n    console.log(data);\n  });\n  var filterData; // filtering the content based on the search textto be displayed ; this filters by name and fullname\n  // filterData = data.filter((item) => {\n  //   if (searchText == '') {\n  //\n  //     return item\n  //\n  //   } else if (\n  //     item.name.toLowerCase().includes(searchText.toLowerCase()) ||\n  //     item.biography.fullName.toLowerCase().includes(searchText.toLowerCase())\n  //   ) {\n  //     return item\n  //   }\n  // })\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: filterData.filter(superhero => superhero.itemTags.include('love')).map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(SearchResultItem, {\n        item: item,\n        setTagList: setTagList,\n        tagList: tagList,\n        data: data,\n        index: index\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }, this))\n  }, void 0, false);\n}\n\n_s(SearchResult, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = SearchResult;\nexport default SearchResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"sources":["/Users/ish/Google Drive/Ish Projects /its/web-services-frontend-dev-test/app/src/components/SearchResult/SearchResults.js"],"names":["React","useEffect","SearchResultItem","SearchResult","props","data","searchText","setTagList","tagList","selectedTag","itemTags","console","log","filterData","filter","superhero","include","map","item","index","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAAA;;AAC3B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,UAAR;AAAoBC,IAAAA,UAApB;AAAgCC,IAAAA;AAAhC,MAA4CJ,KAAlD;AAEA,QAAMK,WAAW,GAAG,MAApB;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,IAAI,CAAC,CAAD,CAAJ,GAAU,EAAE,GAAGA,IAAI,CAAC,CAAD,CAAT;AAAcK,MAAAA,QAAQ,EAAE;AAAxB,KAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACD,GAHQ,CAAT;AAKA,MAAIQ,UAAJ,CAV2B,CAW3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,cAYGA,UAAU,CACRC,MADF,CACUC,SAAD,IAAeA,SAAS,CAACL,QAAV,CAAmBM,OAAnB,CAA2B,MAA3B,CADxB,EAEEC,GAFF,CAEM,CAACC,IAAD,EAAOC,KAAP,kBACH;AAAA,6BACE,QAAC,gBAAD;AACE,QAAA,IAAI,EAAED,IADR;AAEE,QAAA,UAAU,EAAEX,UAFd;AAGE,QAAA,OAAO,EAAEC,OAHX;AAIE,QAAA,IAAI,EAAEH,IAJR;AAKE,QAAA,KAAK,EAAEc;AALT;AAAA;AAAA;AAAA;AAAA;AADF,OAAUD,IAAI,CAACE,EAAf;AAAA;AAAA;AAAA;AAAA,YAHH;AAZH,mBADF;AA4BD;;GArDQjB,Y;;KAAAA,Y;AAuDT,eAAeA,YAAf","sourcesContent":["import React, { useEffect } from 'react'\n\nimport SearchResultItem from './SearchResultItem'\n\nfunction SearchResult(props) {\n  const { data, searchText, setTagList, tagList } = props\n\n  const selectedTag = 'love'\n\n  useEffect(() => {\n    data[0] = { ...data[0], itemTags: 'love' }\n    console.log(data)\n  })\n\n  var filterData\n  // filtering the content based on the search textto be displayed ; this filters by name and fullname\n  // filterData = data.filter((item) => {\n  //   if (searchText == '') {\n  //\n  //     return item\n  //\n  //   } else if (\n  //     item.name.toLowerCase().includes(searchText.toLowerCase()) ||\n  //     item.biography.fullName.toLowerCase().includes(searchText.toLowerCase())\n  //   ) {\n  //     return item\n  //   }\n  // })\n\n  return (\n    <>\n      {/* {filterData.map((item, index) => (\n        <div key={item.id}>\n          <SearchResultItem\n            item={item}\n            setTagList={setTagList}\n            tagList={tagList}\n            data={data}\n            index={index}\n          />\n        </div>\n      ))} */}\n      {filterData\n        .filter((superhero) => superhero.itemTags.include('love'))\n        .map((item, index) => (\n          <div key={item.id}>\n            <SearchResultItem\n              item={item}\n              setTagList={setTagList}\n              tagList={tagList}\n              data={data}\n              index={index}\n            />\n          </div>\n        ))}\n    </>\n  )\n}\n\nexport default SearchResult\n"]},"metadata":{},"sourceType":"module"}