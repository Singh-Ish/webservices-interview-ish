{"ast":null,"code":"var _jsxFileName = \"/Users/ish/Google Drive/Ish Projects /its/web-services-frontend-dev-test/app/src/components/SearchResults.js\";\nimport React from 'react';\nimport SearchResultItem from './SearchResultItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SearchResult(props) {\n  const {\n    data,\n    searchText\n  } = props; // const filterdata = data\n  //   .filter((info) => {\n  //     if (searchText === '') return info\n  //     else if (info.name.toLowerCase().includes(searchText.toLowerCase())) {\n  //       return info\n  //     }\n  //   })\n  //   .map((info) => {\n  //     return <SearchResultItem item={info} />\n  //   })\n\n  return (\n    /*#__PURE__*/\n    // <> need to add unique key\n    _jsxDEV(_Fragment, {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(SearchResultItem, {\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this))\n    }, void 0, false)\n  );\n}\n\n_c = SearchResult;\nexport default SearchResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"sources":["/Users/ish/Google Drive/Ish Projects /its/web-services-frontend-dev-test/app/src/components/SearchResults.js"],"names":["React","SearchResultItem","SearchResult","props","data","searchText","map","item"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,gBAAP,MAA6B,oBAA7B;;;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAuBF,KAA7B,CAD2B,CAG3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AACE;AACA;AAAA,gBACGC,IAAI,CAACE,GAAL,CAAUC,IAAD,iBACR,QAAC,gBAAD;AAAkB,QAAA,IAAI,EAAEA;AAAxB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAFF;AAQD;;KAtBQL,Y;AAwBT,eAAeA,YAAf","sourcesContent":["import React from 'react'\n\nimport SearchResultItem from './SearchResultItem'\n\nfunction SearchResult(props) {\n  const { data, searchText } = props\n\n  // const filterdata = data\n  //   .filter((info) => {\n  //     if (searchText === '') return info\n  //     else if (info.name.toLowerCase().includes(searchText.toLowerCase())) {\n  //       return info\n  //     }\n  //   })\n  //   .map((info) => {\n  //     return <SearchResultItem item={info} />\n  //   })\n\n  return (\n    // <> need to add unique key\n    <>\n      {data.map((item) => (\n        <SearchResultItem item={item} />\n      ))}\n    </>\n  )\n}\n\nexport default SearchResult\n"]},"metadata":{},"sourceType":"module"}